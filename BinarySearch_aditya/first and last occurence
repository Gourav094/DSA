void first(vector<int>&arr,int x,int n,vector<int>& ans){
        int s=0;
        int e=n-1;
        int res=-1;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(arr[mid]==x){
                res=mid;
                e=mid-1;
            }
            else if(arr[mid]< x){
                s=mid+1;
            }
            else e=mid-1;
        }
        ans.push_back(res);
        return;
    }
    void last(vector<int>&arr,int x,int n,vector<int>& ans){
        int s=0;
        int e=n-1;
        int res=-1;
        while(s<=e){
            int mid=s+(e-s)/2;
            if(arr[mid]==x){
                res=mid;
                s=mid+1;
            }
            else if(arr[mid]< x){
                s=mid+1;
            }
            else e=mid-1;
        }
        ans.push_back(res);
        return;
    }
    vector<int> firstAndLast(vector<int> &arr, int n, int x) {
        // Code here
        vector<int>ans;
        first(arr,x,n,ans);
        last(arr,x,n,ans);
        if(ans[0]==-1){
            ans.pop_back();
        }
        return ans;
        
    }

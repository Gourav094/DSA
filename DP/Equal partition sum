//recursive,memoize and tabulation all approaches are same as subset sum
bool subsum(vector<int>arr,int n,int sum){
        int T[n+1][sum+1];
        for(int i=0;i<n+1;i++){
            for(int j=0;j<sum+1;j++){
                if( i == 0){
                    T[i][j]=false;
                }
                if(j == 0){
                    T[i][j]=true;
                }
            }
        }
        for(int i=1;i<n+1;i++){
            for(int j=1;j<sum+1;j++){
                if(arr[i-1]<=j){
                    T[i][j]=T[i-1][j] || T[i-1][j-arr[i-1]];
                }
                else T[i][j]=T[i-1][j];
            }
        
        }
        return T[n][sum];
    }
    bool canPartition(vector<int>& nums) {
        int n=nums.size();
        int sum=0;
        for(int i=0;i<n;i++){
            sum+=nums[i];
        }
        if(sum%2 !=0){
            return false;
        }
        else return subsum(nums,n,sum/2);
    }

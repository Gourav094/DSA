//recursive way
int solve(int arr[],int n,int i,int j){
        if(i>=j){
            return 0;
        }
        int temp,mini=INT_MAX;
        for(int k=i;k<j;k++){
            temp=solve(arr,n,i,k)+solve(arr,n,k+1,j)+arr[i-1]*arr[k]*arr[j];
            if(mini>temp){
                mini=temp;
            }
        }
        return mini;
    }
    int matrixMultiplication(int N, int arr[])
    {
        // code here
        
        return solve(arr,N,1,N-1);
        
    } 
    
    
//memoization:==>
int t[501][501];
    int solve(int arr[],int n,int i,int j){
        if(i>=j){
            return 0;
        }
        if(t[i][j]!=-1){
            return t[i][j];
        }
        int temp,mini=INT_MAX;
        for(int k=i;k<j;k++){
            temp=solve(arr,n,i,k)+solve(arr,n,k+1,j)+arr[i-1]*arr[k]*arr[j];
            if(mini>temp){
                mini=temp;
            }
        }
        return t[i][j]=mini;
    }
    int matrixMultiplication(int N, int arr[])
    {
        memset(t,-1,sizeof(t));
        return solve(arr,N,1,N-1);
    }

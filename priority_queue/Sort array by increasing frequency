class Solution {
public:
    class comparator{
        public:
        bool operator()(pair<int, int>&p1, pair<int, int>&p2) 
        {    
            if(p1.first==p2.first)
                return p1.second < p2.second;
            return p1.first > p2.first;
        }
    };
    vector<int> frequencySort(vector<int>& nums) {
        vector<int> ans;
        unordered_map<int,int>mp;
        for(int i=0;i<nums.size();i++){
            mp[nums[i]]++;
            
        }
        
        priority_queue<pair<int,int>,vector<pair<int,int>>,comparator>pq;
        for(auto i=mp.begin();i!=mp.end();i++){
            pq.push({i->second,i->first});
            
        }
        while(!pq.empty()){
            int freq=pq.top().first;
            int ele=pq.top().second;
            
            for(int i=0;i<freq;i++){
                ans.push_back(ele);
            }          
            pq.pop();
        }
        return ans;
    }
    
};
